apiVersion: apps/v1
kind: Deployment
metadata:
  name: xdemo-frontend
  labels: {app.kubernetes.io/name: xdemo-frontend, helm.sh/chart: chedemo-0.1.0, app.kubernetes.io/instance: release-name,
    app.kubernetes.io/managed-by: 'Tiller,graphite-jenkins-gke'}
spec:
  replicas: 1
  selector:
    matchLabels: {app.kubernetes.io/name: xdemo-frontend, app.kubernetes.io/instance: release-name}
  template:
    metadata:
      labels: {app.kubernetes.io/name: xdemo-frontend, app.kubernetes.io/instance: release-name}
    spec:
      containers:
      - name: xdemo-frontend
        image: davwhiteoteemo/xdemo-frontend:latest
        imagePullPolicy: Always
        ports:
        - {name: http, containerPort: 80, protocol: TCP}
        livenessProbe:
          httpGet: {path: /, port: http}
        readinessProbe:
          httpGet: {path: /, port: http}
        resources: {}
        env:
        - {name: server_name, value: xdemo-backend}
        - {name: servive_port, value: '9090'}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xdemo-backend
  labels: {app.kubernetes.io/name: xdemo-backend, helm.sh/chart: chedemo-0.1.0, app.kubernetes.io/instance: release-name,
    app.kubernetes.io/managed-by: 'Tiller,graphite-jenkins-gke'}
spec:
  replicas: 1
  selector:
    matchLabels: {app.kubernetes.io/name: xdemo-backend, app.kubernetes.io/instance: release-name}
  template:
    metadata:
      labels: {app.kubernetes.io/name: xdemo-backend, app.kubernetes.io/instance: release-name}
    spec:
      containers:
      - name: xdemo-backend
        image: davwhiteoteemo/xdemo-backend:latest
        imagePullPolicy: Always
        ports:
        - {name: http, containerPort: 9090, protocol: TCP}
        livenessProbe:
          tcpSocket: {port: 9090}
          initialDelaySeconds: 15
          periodSeconds: 20
        resources: {}
        env:
        - {name: url, value: 'jdbc:mysql://xdemo-database/'}
        - {name: dbName, value: xdemo}
        - {name: driver, value: org.gjt.mm.mysql.Driver}
        - {name: userName, value: xdemo}
        - {name: password, value: xdemo}
        - {name: db_descriptor, value: jdbc/xdemo}
        - {name: report_cache, value: 'false'}
        - {name: charts_cache, value: 'false'}
        - {name: redis_server, value: localhost}
        - {name: service_port, value: '9090'}
        - {name: server_name, value: localhost}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xdemo-database
  labels: {app.kubernetes.io/name: xdemo-database, helm.sh/chart: chedemo-0.1.0, app.kubernetes.io/instance: release-name,
    app.kubernetes.io/managed-by: 'Tiller,graphite-jenkins-gke'}
spec:
  replicas: 1
  selector:
    matchLabels: {app.kubernetes.io/name: xdemo-database, app.kubernetes.io/instance: release-name}
  template:
    metadata:
      labels: {app.kubernetes.io/name: xdemo-database, app.kubernetes.io/instance: release-name}
    spec:
      containers:
      - name: chedemo
        image: davwhiteoteemo/xdemo-database:latest
        imagePullPolicy: Always
        ports:
        - {name: http, containerPort: 3306, protocol: TCP}
        livenessProbe:
          tcpSocket: {port: 3306}
          initialDelaySeconds: 15
          periodSeconds: 20
        resources: null
        env:
        - {name: MYSQL_ROOT_PASSWORD, value: xdemo}
        - {name: MYSQL_USER, value: xdemo}
        - {name: MYSQL_PASSWORD, value: xdemo}
        - {name: MYSQL_DATABASE, value: xdemo}
