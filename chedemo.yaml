apiVersion: 1.0.0
metadata:
 name: chedemo
projects:
 -
  name: chedemo
  source:
   type: git
   location: 'https://github.com/dwhiteOteemo/chedemo-app.git'
components:
 -
  type: chePlugin
  id: redhat/php/latest
  memoryLimit: 1Gi
 -
  type: chePlugin
  id: redhat/php-debugger/latest
  memoryLimit: 256Mi
 -
  type: dockerimage
  alias: php
  image: 'quay.io/eclipse/che-php-7:7.2.0'
  env:
   -
    name: SERVICE_NAME
    value: chedemo-backend
   -
    name: SERVICE_PORT
    value: "9090"
  memoryLimit: 512Mi
  mountSources: true
  endpoints:
   -
    name: 8080/tcp
    port: 8080
  volumes:
   -
    name: composer
    containerPath: /home/user/.composer
   -
    name: symfony
    containerPath: /home/user/.symfony
 -
  type: chePlugin
  id: redhat/java/latest
 -
  type: dockerimage
  alias: gradle
  image: 'quay.io/eclipse/che-java11-gradle:7.2.0'
  env:
   -
    name: GRADLE_USER_HOME
    value: /home/gradle/.gradle
   -
    name: JAVA_OPTS
    value: >-
     -XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
     -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
     -Dsun.zip.disableMemoryMapping=true -Xms20m
     -Djava.security.egd=file:/dev/./urandom
   -
    name: JAVA_TOOL_OPTIONS
    value: >-
     -XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
     -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
     -Dsun.zip.disableMemoryMapping=true -Xms20m
     -Djava.security.egd=file:/dev/./urandom
   -
    name: HOME
    value: /home/gradle
   -
    name: url
    value: "jdbc:mysql://chedemo-database/"
   -
    name: dbName
    value: chedemo
   -
    name: driver
    value: org.gjt.mm.mysql.Driver
   -
    name: userName
    value: chedemo
   -
    name: password
    value: chedemo
   -
    name: db_descriptor
    value: jdbc/chedemo
   -
    name: report_cache
    value: "false"
   -
    name: charts_cache
    value: "false"
   -
    name: redis_server
    value: localhost
   -
    name: service_port
    value: "9090"
   -
    name: server_name
    value: localhost
  memoryLimit: 512Mi
  volumes:
   -
    name: gradle
    containerPath: /home/gradle/.gradle
  mountSources: true
  endpoints:
   -
    name: chedemo-backend
    port: 9090
    attributes:
     discoverable: 'true'
     public: 'false'
 -
  type: dockerimage
  alias: mysql
  image: centos/mysql-57-centos7
  env:
   -
    name: MYSQL_USER
    value: chedemo
   -
    name: MYSQL_PASSWORD
    value: chedemo
   -
    name: MYSQL_DATABASE
    value: chedemo
   -
    name: PS1
    value: '$(echo ${0})\\$'
  memoryLimit: 300Mi
  endpoints:
   -
    name: chedemo-database
    port: 3306
    attributes:
     discoverable: 'true'
     public: 'false'
  mountSources: true
commands:
 -
  name: 05 Start Apache Web Server
  actions:
   -
    type: exec
    component: php
    command: service apache2 start
 -
  name: Stop Apache Web Server
  actions:
   -
    type: exec
    component: php
    command: service apache2 stop
 -
  name: Restart Apache Web Server
  actions:
   -
    type: exec
    component: php
    command: service apache2 restart
 -
  name: 04 Configure Apache Web Server DocumentRoot
  actions:
   -
    type: exec
    component: php
    command: |
     if grep -q '/projects$' /etc/apache2/sites-available/000-default.conf; then
       sed -i 's|DocumentRoot /projects|DocumentRoot /projects/chedemo/frontend/html|' /etc/apache2/sites-available/000-default.conf;
       sed -i "s/SERVICE_NAME/$SERVICE_NAME/g" /projects/chedemo/frontend/html/config/settings.php;
       sed -i "s/SERVICE_PORT/$SERVICE_PORT/g" /projects/chedemo/frontend/html/config/settings.php
     else
       echo "DocumentRoot already configured!"
     fi
 -
  name: 02 gradle build
  actions:
   -
    type: exec
    component: gradle
    command: gradle fatJar
    workdir: '${CHE_PROJECTS_ROOT}/chedemo/service'
 -
  name: 03 gradle run
  actions:
   -
    type: exec
    component: gradle
    command: java -cp build/libs/service-all-1.0.jar org.djw.Main
    workdir: '${CHE_PROJECTS_ROOT}/chedemo/service'
 -
  name: 01 prepare database
  actions:
   -
    type: exec
    component: mysql
    command: >
     gunzip ${CHE_PROJECTS_ROOT}/chedemo/chedemo.sql.gz;
     /opt/rh/rh-mysql57/root/usr/bin/mysql -u root chedemo <
     ${CHE_PROJECTS_ROOT}/chedemo/chedemo.sql
     &&

     echo -e "\e[32mDone.\e[0m Database chedemo was configured!"

